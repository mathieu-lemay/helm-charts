---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o catchall-api
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: catchall
  name: catchall
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: catchall
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -o catchall-api
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/helm-charts-default: "true"
        io.kompose.service: catchall
    spec:
      containers:
        - image: acidrain/catchall-api:{{ .Values.appVersion }}
          name: catchall
          ports:
            - containerPort: {{ .Values.port }}
              protocol: TCP
          env:
            - name: CATCHALL_API_WORKERS
              value: "{{ .Values.workers }}"
            - name: RUST_LOG
              value: "{{ .Values.log.config }}"
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o catchall-api
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: catchall2
  name: catchall2
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: catchall2
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -o catchall-api
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/helm-charts-default: "true"
        io.kompose.service: catchall2
    spec:
      containers:
        - image: acidrain/catchall-api:{{ .Values.appVersion }}
          name: catchall2
          ports:
            - containerPort: {{ .Values.port }}
              protocol: TCP
          env:
            - name: CATCHALL_API_WORKERS
              value: "{{ .Values.workers }}"
            - name: RUST_LOG
              value: "{{ .Values.log.config }}"
          resources: {}
      restartPolicy: Always
status: {}
